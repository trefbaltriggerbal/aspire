@page "/lcg"
@rendermode InteractiveServer
@inject IHttpClientFactory HttpClientFactory
@inject ILogger<Lcg> Logger

<PageTitle>LCG</PageTitle>

<h1>LCG</h1>

<p>
    <button @onclick="Short">short</button>
</p>

<p>
    <input type="number" @bind="fastSteps" />
    <button @onclick="Fast">fast</button>
</p>

<p>
    <input type="number" @bind="setValue" />
    <button @onclick='() => Set("m")'>set m</button>
    <button @onclick='() => Set("a")'>set a</button>
    <button @onclick='() => Set("c")'>set c</button>
</p>

<p>
    <button @onclick='() => Get("m")'>get m</button>
    <button @onclick='() => Get("a")'>get a</button>
    <button @onclick='() => Get("c")'>get c</button>
    <button @onclick='() => Get("seed")'>get seed</button>
</p>

<p>
    <input type="number" @bind="seedValue" />
    <button @onclick="SetSeed">seed</button>
</p>

<p>@message</p>

@code {
    private string? message;
    private long fastSteps;
    private long setValue;
    private long seedValue;

    private async Task Short()
    {
        var client = HttpClientFactory.CreateClient();
        Logger.LogInformation("Calling short");
        message = await client.GetStringAsync("http://lcg/lcg/short");
    }

    private async Task Fast()
    {
        var client = HttpClientFactory.CreateClient();
        Logger.LogInformation("Calling fast {Steps}", fastSteps);
        message = await client.GetStringAsync($"http://lcg/lcg/fast/{fastSteps}");
    }

    private async Task Set(string param)
    {
        var client = HttpClientFactory.CreateClient();
        Logger.LogInformation("Calling set {Param} {Value}", param, setValue);
        message = await client.GetStringAsync($"http://lcg/lcg/set/{param}/{setValue}");
    }

    private async Task Get(string param)
    {
        var client = HttpClientFactory.CreateClient();
        Logger.LogInformation("Calling get {Param}", param);
        message = await client.GetStringAsync($"http://lcg/lcg/get/{param}");
    }

    private async Task SetSeed()
    {
        var client = HttpClientFactory.CreateClient();
        Logger.LogInformation("Calling seed {Value}", seedValue);
        message = await client.GetStringAsync($"http://lcg/lcg/seed/{seedValue}");
    }
}
