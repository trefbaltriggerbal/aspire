@page "/policies"
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles = "Client")]
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.Forms
@using System.Collections.Generic
@inject UserManager<ApplicationUser> UserManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ApplicationDbContext Db
@inject Microsoft.Extensions.Localization.IStringLocalizer<Policies> L
@rendermode InteractiveServer

<PageTitle>@L["PageTitle"]</PageTitle>

<h1>@L["Heading"]</h1>

@if (policies == null)
{
    <p><em>@L["Loading"]</em></p>
}
else if (policies.Count == 0)
{
    <p>@L["None"]</p>
}
else
{
    <table class="table">
        <thead>
            <tr><th>@L["Number"]</th><th>@L["Description"]</th><th>@L["Start"]</th><th>@L["End"]</th><th>@L["Actions"]</th></tr>
        </thead>
        <tbody>
@foreach (var p in policies)
        {
            <tr>
                <td>@p.PolicyNumber</td>
                <td>@p.Description</td>
                <td>@p.StartDate.ToShortDateString()</td>
                <td>@p.EndDate.ToShortDateString()</td>
                <td>
                    <a class="btn btn-sm btn-info me-1" href="/policies/@p.Id">@L["Details"]</a>
                    <a class="btn btn-sm btn-secondary me-1" href="/policies/@p.Id/declarations">@L["ViewDeclarations"]</a>
                    <a class="btn btn-sm btn-primary" href="/policies/@p.Id/declarations/new">@L["CreateDeclaration"]</a>
                </td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    private List<Policy>? policies;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = await UserManager.GetUserAsync(authState.User);
        if (user != null)
        {
            policies = await Db.Policies
                .Where(p => p.UserId == user.Id)
                .ToListAsync();
        }
    }
}
